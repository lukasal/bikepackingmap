name: CI-pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  check_dockerfile:
    runs-on: ubuntu-latest
    outputs:
      dockerfile_changed: ${{ steps.dockerfile_check.outputs.dockerfile_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if Dockerfile has changed
        id: dockerfile_check
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q 'Dockerfile\|requirements.txt\|github_CI'; then
            echo "dockerfile_changed=true" >> $GITHUB_ENV
            echo "::set-output name=dockerfile_changed::true"
          else
            echo "dockerfile_changed=false" >> $GITHUB_ENV
            echo "::set-output name=dockerfile_changed::false"
          fi

  build:
    needs: check_dockerfile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: laappacr.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
          
      - name: Build and push Docker image
        if: needs.check_dockerfile.outputs.dockerfile_changed == 'true'
        run: |
          docker build \
            -t laappacr.azurecr.io/bikepackmap:latest \
            -t laappacr.azurecr.io/bikepackmap:${{ github.sha }} .
                      #az acr import --name laappacr --source laappacr.azurecr.io/bikepackmap:latest --image bikepackmap:previous-latest
          docker push laappacr.azurecr.io/bikepackmap:latest
          docker push laappacr.azurecr.io/bikepackmap:${{github.SHA}}
          

  test:
    needs: build
    runs-on: ubuntu-latest
    container:
      image: laappacr.azurecr.io/bikepackmap:latest
      credentials:
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      
      - name: Run unit tests
        env:
          REDIS_HOST: ${{ secrets.REDIS_HOST }}    
          REDIS_KEY: ${{ secrets.REDIS_KEY }}    
          SECRET_KEY: ${{ secrets.SECRET_KEY }}    
        run: python -m unittest discover

  deploy:
    needs: test
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Restart Web App
        run: |
          az webapp restart --name bikepackmap --resource-group la_learning